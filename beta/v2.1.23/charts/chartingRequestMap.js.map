{"version":3,"sources":["../../../../src/charts/chartingRequestMap.es6"],"names":["db","barsTable","addCollection","barsLoaded","instrumentCdAndTp","key","chartIDs","chartIDList","processOHLC","forEach","chartID","series","containerIDWithHash","highcharts","get","type","data","timePeriod","lastBarOpenTime","length","x","time","db_bars","chain","find","where","obj","simplesort","index","dbBar","foundBar","undefined","indx","value","isDataTypeClosePriceOnly","update","close","open","high","low","addPoint","isDirty","isDirtyData","chart","redraw","dataInHighChartsFormat","barIndex","numberOfBarsToShow","isTick","totalLength","endIndex","instrumentName","series_compare","countInstrumentCharts","options","isInstrument","id","xAxis","range","seriesConf","name","dataGrouping","enabled","compare","states","hover","isLineDotType","isDotType","dashStyle","marker","radius","addSeries","isNumeric","push","keyFor","symbol","granularity_or_timeperiod","granularity","convertToTimeperiodObject","timeInSeconds","toUpperCase","register","map","style","is_tick","trim","toLowerCase","req","count","subscribe","start","Date","getTime","_3YearsBack","setUTCFullYear","getUTCFullYear","setDate","getDate","adjust_start_time","subscribers","send","catch","up","code","growl","notice","message","i18n","unregister","remove","timerHandler","clearInterval","forget","err","console","error","removeChart","includes","digits_after_decimal","pip","warn","decimal_digits","limit","d","quote","len","substring","indexOf"],"mappings":"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","file":"chartingRequestMap.js","sourcesContent":["﻿/**\n * Created by amin on October 15,2015.\n */\n\n/**\n    Key is instrumentCode+timePeriod(in seconds), Value is\n        {\n            timerHandler : ,\n            chartIDs : [\n                {\n                    containerIDWithHash : containerIDWithHash,\n                    series_compare : series_compare,\n                    instrumentCode : instrumentCode,\n                    instrumentName : instrumentName\n                }\n            ]\n        }\n**/\nimport loki from 'lokijs';\nimport _ from 'lodash';\nimport $ from 'jquery';\nimport liveapi from 'websockets/binary_websockets';\nimport 'jquery-growl';\nimport 'common/util';\n\nconst db = new loki();\nexport const barsTable = db.addCollection('bars_table');\n// TODO: add common tasks for chartingRequestMap to this module\n//       move code from charts.js, ohlc_handler.js, stream_handler.js and symbol_handler.js\n\n\nexport const barsLoaded = function (instrumentCdAndTp) {\n\n    const key = instrumentCdAndTp;\n    if (!this[key] || !this[key].chartIDs) return;\n\n    const chartIDList = this[key].chartIDs;\n    const processOHLC = this.processOHLC;\n\n    chartIDList.forEach((chartID) => {\n\n        if (!chartID) return;\n\n        const series = $(chartID.containerIDWithHash).highcharts().get(key),\n            type = $(chartID.containerIDWithHash).data('type'),\n            timePeriod = $(chartID.containerIDWithHash).data('timePeriod');\n\n        if (series) { //Update mode\n\n            const lastBarOpenTime = series.data[series.data.length - 1].x || series.data[series.data.length - 1].time;\n            const db_bars = barsTable\n                .chain()\n                .find({ instrumentCdAndTp: key })\n                .where((obj) => {\n                    return obj.time >= lastBarOpenTime;\n                })\n                .simplesort('time', false).data();\n\n            for (let index in db_bars) {\n                const dbBar = db_bars[index];\n                //If the bar already exists, then update it, else add a new bar\n                let foundBar = undefined;\n                for (let indx = series.data.length - 1; indx >= 0; indx--) {\n                    const value = series.data[indx];\n                    if (value && dbBar.time == (value.x || value.time)) {\n                        foundBar = value;\n                        break;\n                    }\n                }\n                if (foundBar) {\n                    if (type && isDataTypeClosePriceOnly(type)) {\n                        foundBar.update([dbBar.time, dbBar.close], false);\n                    } else {\n                        foundBar.update([dbBar.time, dbBar.open, dbBar.high, dbBar.low, dbBar.close], false);\n                    }\n                } else {\n                    if (type && isDataTypeClosePriceOnly(type)) {\n                        series.addPoint([dbBar.time, dbBar.close], false, true);\n                    } else {\n                        series.addPoint([dbBar.time, dbBar.open, dbBar.high, dbBar.low, dbBar.close], false, true);\n                    }\n                }\n            }\n            //We have to mark it dirty because for OHLC, Highcharts leave some weird marks on chart that do not belong to OHLC\n            series.isDirty = true;\n            series.isDirtyData = true;\n            series.chart.redraw();\n\n        } else {\n\n            //First time rendering\n            const chart = $(chartID.containerIDWithHash).highcharts();\n            //We just want to get bars which are after the last complete rendered bar on chart(excluding the currently forming bar because that might change its values)\n            const dataInHighChartsFormat = [];\n\n            const db_bars = barsTable\n                .chain()\n                .find({ instrumentCdAndTp: key })\n                .simplesort('time', false)\n                .data();\n            for (const barIndex in db_bars) {\n                processOHLC(db_bars[barIndex].open, db_bars[barIndex].high, db_bars[barIndex].low, db_bars[barIndex].close,\n                    db_bars[barIndex].time, type, dataInHighChartsFormat);\n            }\n\n            if (!chart || dataInHighChartsFormat.length === 0) return;\n\n            //set the range\n            let numberOfBarsToShow = 30;\n            if (isTick(timePeriod)) numberOfBarsToShow = 200;\n            const totalLength = dataInHighChartsFormat.length;\n            const endIndex = dataInHighChartsFormat.length > numberOfBarsToShow ? totalLength - numberOfBarsToShow : 0;\n\n            const instrumentName = chartID.instrumentName;\n            const series_compare = chartID.series_compare;\n\n            //Find out how many instrument series are loaded on chart\n            let countInstrumentCharts = 0;\n            chart.series.forEach((series) => {\n                if (series.options.isInstrument && series.options.id !== \"navigator\") {\n                    ++countInstrumentCharts;\n                }\n            });\n            if (countInstrumentCharts === 0) {\n                chart.xAxis[0].range = dataInHighChartsFormat[totalLength - 1][0] - dataInHighChartsFormat[endIndex][0]; //show 30 bars\n            }\n\n            const seriesConf = {\n                id: key,\n                name: instrumentName,\n                data: dataInHighChartsFormat,\n                type: type ? type : 'candlestick', //area, candlestick, line, areaspline, column, ohlc, scatter, dot, linedot\n                dataGrouping: {\n                    enabled: false\n                },\n                compare: series_compare,\n                states: {\n                    hover: {\n                        enabled: false\n                    }\n                },\n                isInstrument: true //Its our variable\n            };\n            if (isLineDotType(type) || isDotType(type)) {\n                seriesConf.type = 'line';\n                if (isDotType(type)) {\n                    seriesConf.dashStyle = 'dot';\n                }\n                seriesConf.marker = {\n                    enabled: !isDotType(type),\n                    radius: 4\n                };\n            }\n            chart.addSeries(seriesConf);\n\n        }\n\n    });\n\n}\n\nexport const processOHLC = (open, high, low, close, time, type, dataInHighChartsFormat) => {\n    //Ignore if last known bar time is greater than this new bar time\n    if (dataInHighChartsFormat.length > 0 && dataInHighChartsFormat[dataInHighChartsFormat.length - 1][0] > time) return;\n\n    if (type && isDataTypeClosePriceOnly(type)) {\n        if (!$.isNumeric(time) || !$.isNumeric(close)) return;\n        dataInHighChartsFormat.push([time, close]);\n    } else {\n        if (!$.isNumeric(time) || !$.isNumeric(open) || !$.isNumeric(high) || !$.isNumeric(low) || !$.isNumeric(close)) return;\n        dataInHighChartsFormat.push([time, open, high, low, close]);\n    }\n}\n\nexport const keyFor = (symbol, granularity_or_timeperiod) => {\n    let granularity = granularity_or_timeperiod || 0;\n    if (typeof granularity === 'string') {\n        granularity = convertToTimeperiodObject(granularity).timeInSeconds();\n    }\n    return (symbol + granularity).toUpperCase();\n}\n\n/*  options: {\n      symbol,\n      granularity: // could be a number or a string in 1t, 2m, 3h, 4d format.\n                   // if a string is present it will be converted to seconds\n      subscribe: // default = 1,\n      style: // default = 'ticks',\n      count: // default = 1,\n      adjust_start_time?: // only will be added to the request if present\n    }\n    will return a promise\n*/\n\n\nexport const register = function(options) {\n    const map = this;\n    const key = map.keyFor(options.symbol, options.granularity);\n\n    let granularity = options.granularity || 0;\n    //If granularity = 0, then style should be ticks\n    const style = (granularity == 0 || !options.style) ? 'ticks' : options.style;\n\n    let is_tick = true;\n    if (typeof granularity === 'string') {\n        if ($.trim(granularity) == '0') {} else if ($.trim(granularity).toLowerCase() == '1t') {\n            granularity = convertToTimeperiodObject(granularity).timeInSeconds();\n        } else {\n            is_tick = false;\n            granularity = convertToTimeperiodObject(granularity).timeInSeconds();\n        }\n    }\n\n    const req = {\n        \"ticks_history\": options.symbol,\n        \"granularity\": granularity,\n        \"count\": options.count || 1,\n        \"end\": 'latest',\n        \"style\": style\n    };\n    if (options.subscribe === 1) {\n        req.subscribe = 1;\n    }\n\n    if (!is_tick) {\n        const count = options.count || 1;\n        let start = (new Date().getTime() / 1000 - count * granularity) | 0;\n\n        //If the start time is less than 3 years, adjust the start time\n        const _3YearsBack = new Date();\n        _3YearsBack.setUTCFullYear(_3YearsBack.getUTCFullYear() - 3);\n        //Going back exactly 3 years fails. I am adding 1 day\n        _3YearsBack.setDate(_3YearsBack.getDate() + 1);\n\n        if ((start * 1000) < _3YearsBack.getTime()) { start = (_3YearsBack.getTime() / 1000) | 0; }\n\n        req.style = 'candles';\n        req.start = start;\n        req.adjust_start_time = options.adjust_start_time || 1;\n    }\n\n    map[key] = { symbol: options.symbol, granularity: granularity, subscribers: 0, chartIDs: [] };\n    if (req.subscribe) map[key].subscribers = 1; // how many charts have subscribed for a stream\n    return liveapi.send(req, /*timeout:*/ 30 * 1000) // 30 second timeout\n        .catch((up) => {\n            /* if the market is closed try the same request without subscribing */\n            if (req.subscribe && up.code == 'MarketIsClosed') {\n                $.growl.notice({ message: options.symbol + ' market is presently closed.'.i18n() });\n                delete req.subscribe;\n                map[key].subscribers -= 1;\n                return liveapi.send(req, 30 * 1000);\n            }\n            delete map[key];\n            throw up;\n        });\n}\n\n/* use this method if there is already a stream with this key registered,\n  if you are counting on a registered stream and don't call this method that stream might be removed,\n  when all dependent modules call unregister function.\n  you should also make sure to call unregister when you no longer need the stream to avoid \"stream leack!\" */\nexport const subscribe = function(key, chartID) {\n    const map = this;\n    if (!map[key]) {\n        return; }\n    map[key].subscribers += 1;\n    if (chartID) {\n        map[key].chartIDs.push(chartID);\n    }\n}\n\nexport const unregister = function(key, containerIDWithHash) {\n    const map = this;\n    if (!map[key]) {\n        return; }\n    if (containerIDWithHash) {\n        _.remove(map[key].chartIDs, { containerIDWithHash: containerIDWithHash });\n    }\n    map[key].subscribers -= 1;\n    if (map[key].chartIDs.length === 0 && map[key].timerHandler) {\n        clearInterval(map[key].timerHandler);\n        map[key].timerHandler = null;\n    }\n    if (map[key].subscribers === 0 && map[key].id) { /* id is set in stream_handler.js */\n        liveapi.send({ forget: map[key].id })\n            .catch((err) => { console.error(err); });\n    }\n    if (map[key].subscribers === 0) {\n        delete map[key];\n    }\n}\n\n/* this will be use for charts.drawCharts method which wants to : Just make sure that everything has been cleared out before starting a new thread! */\nexport const removeChart = function(key, containerIDWithHash) {\n    const map = this;\n    if (!map[key]) return;\n    if (_(map[key].chartIDs).map('containerIDWithHash').includes(containerIDWithHash)) {\n        map[key].subscribers -= 1;\n        _.remove(map[key].chartIDs, { containerIDWithHash: containerIDWithHash });\n    }\n}\n\nexport const digits_after_decimal = function(pip, symbol) {\n    pip = pip && pip + '';\n    if (!pip) {\n        console.warn();\n        ('pip value is invalid', pip);\n        /**\n         * This is disaster. If pip value is invalid, then it could several trade related issues.\n         * Try to guess decimal places from whatever data we have from local database\n         * (This is a fallback method. the execution never come here)\n         * Technique -\n         *      Fetch last 10 tick values\n         *      Take the maximum decimal places all these ticks\n         */\n        const key = this.keyFor(symbol, 0);\n        let decimal_digits = 0;\n        barsTable.chain()\n            .find({ instrumentCdAndTp: key })\n            .simplesort(\"time\", true).limit(10).data()\n            .forEach((d) => {\n                const quote = d.close + '';\n                const len = quote.substring(quote.indexOf('.') + 1).length;\n                if (len > decimal_digits)\n                    decimal_digits = len;\n            });\n        return decimal_digits;\n    }\n    return pip.substring(pip.indexOf(\".\") + 1).length;\n}\n\nexport default {\n  barsLoaded, processOHLC,\n  keyFor, barsTable,\n  register, subscribe,\n  unregister, removeChart,\n  digits_after_decimal\n}\n"]}