{"version":3,"sources":["../../../../src/copytrade/index.es6"],"names":["getLoggedInUserId","local_storage","get","id","TRADE_TYPES","code","name","getStorageName","DEFAULT_TRADE_TYPES","slice","map","m","defaultCopySettings","traderApiToken","copy_start","min_trade_stake","max_trade_stake","assets","cloneDeep","DEFAULT_ASSETS","trade_types","defaultTraderDetails","loginid","open","started","disableStart","yourCopySettings","validateYourCopySettingsData","valid","errorMessage","yourCopySettingsData","length","growl","error","message","updateLocalStorage","debounce","clonedScope","scope","searchToken","disable","set","GROUPED_INTRUMENTS","then","flatten","instruments","displayName","display_name","submarkets","mm","forEach","eGrp","eSubGrp","symbol","push","state","masterAssetList","groupedAssets","filter","f","refreshTraderStats","token","send","copytrading_statistics","trader_id","copyStatData","traderTokenDetails","find","traderTokens","merge","traderStatistics","win","win_view","masterTradeTypeList","allowCopy","allow_copiers","onAllowCopyChange","event","set_settings","catch","e","onOpenChange","index","onStartedChange","newStarted","fromLocalStorage","currentTraderTokenDetails_localSto","newObj","splice","defer","copy_stop","onRemove","toBeRemovedItem","onRefresh","trader","disableRefresh","console","onMinTradeChange","target","data","value","isNaN","parseInt","onMaxTradeChange","onUpdateYourSettings","notice","onTokenChange","onKeyDown","keyCode","addToken","tokenUserData","focus","initConfigWindow","root","i18n","bind","createBlankWindow","title","resizable","collapsable","minimizable","maximizable","modal","width","log","copyTrade","get_settings","traderToken","close","unbind","dialog","remove","track","module_id","is_unique","init","$menuLink","click","moveToTop"],"mappings":"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","file":"index.js","sourcesContent":["/**\n * Created by Arnab Karmakar on 10/1/17.\n */\nimport $ from 'jquery';\nimport windows from '../windows/windows';\nimport rv from '../common/rivetsExtra';\nimport _ from 'lodash';\nimport html from 'text!./index.html';\nimport 'css!./index.css';\nimport '../common/util';\nimport liveapi from 'websockets/binary_websockets';\nimport validateToken from 'websockets/validateToken';\nimport { init as instrumentPromise } from '../instruments/instruments';\n\n// While using copy trader, this cannot be NULL\nconst getLoggedInUserId = () => local_storage.get(\"oauth\")[0].id;\n\nconst TRADE_TYPES = [{\n    code: 'CALL',\n    name: 'Rise/Higher',\n  },\n  {\n    code: 'PUT',\n    name: 'Fall/Lower',\n  },\n  {\n    code: 'ONETOUCH',\n    name: 'Touch',\n  },\n  {\n    code: 'NOTOUCH',\n    name: 'NoTouch',\n  },\n  {\n    code: 'EXPIRYMISS',\n    name: 'Ends Out',\n  },\n  {\n    code: 'EXPIRYRANGE',\n    name: 'Ends In',\n  },\n  {\n    code: 'DIGITDIFF',\n    name: 'Digits Differ',\n  },\n  {\n    code: 'DIGITMATCH',\n    name: 'Digits Match',\n  },\n  {\n    code: 'DIGITOVER',\n    name: 'Digits Over',\n  },\n  {\n    code: 'DIGITUNDER',\n    name: 'Digits Under',\n  },\n  {\n    code: 'DIGITODD',\n    name: 'Digits Odd',\n  },\n  {\n    code: 'DIGITEVEN',\n    name: 'Digits Even',\n  },\n  {\n    code: 'ASIANU',\n    name: 'Asians Up',\n  },\n  {\n    code: 'ASIAND',\n    name: 'Asians Down',\n}];\n\nconst getStorageName = () => `copyTrade_${getLoggedInUserId()}`;\n\nconst DEFAULT_TRADE_TYPES = TRADE_TYPES.slice(0, 2).map(m => m.code);\n\nconst defaultCopySettings = (traderApiToken) => ({\n  copy_start: traderApiToken,\n  min_trade_stake: 10,\n  max_trade_stake: 100,\n  assets: _.cloneDeep(DEFAULT_ASSETS),\n  trade_types: _.cloneDeep(DEFAULT_TRADE_TYPES),\n});\n\nconst defaultTraderDetails = (traderApiToken, loginid) => ({\n  open: false,\n  started: false,\n  disableStart: false,\n  loginid,\n  yourCopySettings: defaultCopySettings(traderApiToken),\n});\nconst validateYourCopySettingsData = yourCopySettingsData => {\n  let valid = false;\n  let errorMessage = '';\n  if (yourCopySettingsData) {\n    if (yourCopySettingsData.assets && yourCopySettingsData.assets.length > 0) {\n      if (yourCopySettingsData.trade_types && yourCopySettingsData.trade_types.length > 0) {\n        if (yourCopySettingsData.min_trade_stake >= 1 && yourCopySettingsData.min_trade_stake <= 50000) {\n          if (yourCopySettingsData.max_trade_stake >= 1 && yourCopySettingsData.max_trade_stake <= 50000) {\n            if (yourCopySettingsData.min_trade_stake < yourCopySettingsData.max_trade_stake) {\n              valid = true;\n            } else {\n              errorMessage = 'Min Trade Stake cannot be more than or equal to Max Trader stake';\n            }\n          } else {\n            errorMessage = 'Max Trade Stake should between 1 and 50000';\n          }\n        } else {\n          errorMessage = 'Min Trade Stake should between 1 and 50000';\n        }\n      } else {\n        errorMessage = 'Trade types required';\n      }\n    } else {\n      errorMessage = 'Assets required';\n    }\n  } else {\n    errorMessage = 'Enter valid values for copy settings';\n  }\n  if (errorMessage) {\n    $.growl.error({ message: errorMessage });\n  }\n  return valid;\n};\nconst updateLocalStorage = _.debounce(scope => {\n  const clonedScope = _.cloneDeep(scope);\n  delete clonedScope.searchToken.disable;\n  local_storage.set(getStorageName(), clonedScope);\n}, 50);\n\nlet GROUPED_INTRUMENTS = null; // For nice display purpose only\nlet DEFAULT_ASSETS = null;\n//Get instrument list\ninstrumentPromise().then(instruments => {\n  GROUPED_INTRUMENTS = _.flatten(instruments.map(m => {\n    const displayName = m.display_name;\n    return m.submarkets.map(mm => ({\n      displayName: `${displayName} - ${mm.display_name}`,\n      instruments: mm.instruments,\n    }));\n  }));\n  let assets = [];\n  instruments.forEach(eGrp => {\n    eGrp.submarkets.forEach(eSubGrp => {\n      eSubGrp.instruments.forEach(({ symbol, display_name }) => {\n        assets.push({\n          code: symbol,\n          name: display_name,\n        });\n      });\n    });\n  });\n  state.masterAssetList = assets;\n  state.groupedAssets = GROUPED_INTRUMENTS;\n  // Randomly add top 2 assets in default list\n  DEFAULT_ASSETS = assets.filter(f => f.code === 'R_10').map(m => m.code);\n});\n\nconst refreshTraderStats = (loginid, token, scope) => liveapi\n  .send({\n    copytrading_statistics: 1,\n    trader_id: loginid,\n  })\n  .then(copyStatData => {\n    if (copyStatData.copytrading_statistics) {\n      const traderTokenDetails = _.find(scope.traderTokens, f =>\n        f.yourCopySettings && f.yourCopySettings.copy_start === token);\n      //Check if we already added this trader. If yes, then merge the changes\n      if (traderTokenDetails) {\n        _.merge(traderTokenDetails.traderStatistics, copyStatData.copytrading_statistics);\n      }\n      //If not added, then add this along with default yourCopySettings object\n      else {\n        scope.traderTokens.push(_.merge({\n          traderStatistics: copyStatData.copytrading_statistics,\n        }, defaultTraderDetails(token, loginid)));\n      }\n    }\n    updateLocalStorage(scope);\n  });\n\nlet win = null, win_view = null;\n\nconst state = {\n  //[{ code: , name: }]\n  masterAssetList: [],\n  //[{ code: , name: }]\n  masterTradeTypeList: _.cloneDeep(TRADE_TYPES),\n  groupedAssets: [],\n  allowCopy: {\n    allow_copiers: false,\n    onAllowCopyChange: _.debounce((event, scope) => {\n      liveapi\n        .send({\n          set_settings: 1,\n          allow_copiers: +scope.allowCopy.allow_copiers,\n        })\n        .catch(e => {\n          $.growl.error({ message: e.message });\n          //revert\n          scope.allowCopy.allow_copiers = !scope.allowCopy.allow_copiers;\n        });\n    }, 250),\n  },\n  onOpenChange: (index) => {\n    state.traderTokens[index].open = !state.traderTokens[index].open;\n  },\n  onStartedChange: (index) => {\n    state.traderTokens[index].disableStart = true;\n    const newStarted = !state.traderTokens[index].started;\n    if (newStarted) {\n      //Start copying\n      //if started, revert back to last saved changes(in case user changed anything)\n      const fromLocalStorage = local_storage.get(getStorageName());\n      if (fromLocalStorage) {\n        const currentTraderTokenDetails_localSto = fromLocalStorage.traderTokens[index];\n        if (currentTraderTokenDetails_localSto) {\n          const newObj = {};\n          _.merge(newObj, state.traderTokens[index], currentTraderTokenDetails_localSto);\n          state.traderTokens.splice(index, 1);\n          //Have to apply this trick in order to trigger update of UI using rivetsjs.\n          _.defer(() => {\n            state.traderTokens.splice(index, 0, newObj);\n            liveapi\n              .send(newObj.yourCopySettings)\n              .then(() => {\n                newObj.disableStart = false;\n                newObj.started = true;\n                updateLocalStorage(state);\n              })\n              .catch(e => {\n                $.growl.error({ message: e.message });\n                newObj.disableStart = false;\n                updateLocalStorage(state);\n              });\n          });\n        }\n      }\n    } else {\n      //Stop copying\n      liveapi.send({\n          copy_stop: state.traderTokens[index].yourCopySettings.copy_start\n        })\n        .then(() => {\n          state.traderTokens[index].disableStart = false;\n          state.traderTokens[index].started = false;\n          updateLocalStorage(state);\n        })\n        .catch(e => {\n          $.growl.error({ message: e.message });\n          state.traderTokens[index].disableStart = false;\n          updateLocalStorage(state);\n        });\n    }\n  },\n  onRemove: (index) => {\n    const toBeRemovedItem = state.traderTokens[index];\n    state.traderTokens.splice(index, 1);\n    updateLocalStorage(state);\n    // Gracefully delete it.\n    liveapi.send({\n      copy_stop: toBeRemovedItem.yourCopySettings.copy_start\n    })\n    .catch(e => {});\n  },\n  onRefresh: (index) => {\n    const trader = state.traderTokens[index];\n    const loginid = trader.loginid;\n    const token = trader.yourCopySettings.copy_start;\n    if (loginid && token) {\n      trader.disableRefresh = true;\n      refreshTraderStats(loginid, token, state)\n        .then(() => {\n          trader.disableRefresh = false;\n          updateLocalStorage(state);\n        })\n        .catch(e => {\n          $.growl.error({ message: 'Refresh failed'});\n          console.error(e);\n          trader.disableRefresh = false;\n          updateLocalStorage(scope);\n        });\n    }\n  },\n  onMinTradeChange: (event, scope) => {\n    const index = $(event.target).data('index');\n    const value = event.target.value;\n    if (!isNaN(parseInt(value)))\n      scope.traderTokens[index].yourCopySettings.min_trade_stake = parseInt(value);\n  },\n  onMaxTradeChange: (event, scope) => {\n    const index = $(event.target).data('index');\n    const value = event.target.value;\n    scope.traderTokens[index].yourCopySettings.max_trade_stake = value;\n  },\n  onUpdateYourSettings: (index) => {\n    if (validateYourCopySettingsData(state.traderTokens[index].yourCopySettings)) {\n      /**\n       * Make sure min_trade_stake & max_trade_stack are numeric\n       */\n      state.traderTokens[index].yourCopySettings.min_trade_stake = parseInt(state.traderTokens[index].yourCopySettings.min_trade_stake);\n      state.traderTokens[index].yourCopySettings.max_trade_stake = parseInt(state.traderTokens[index].yourCopySettings.max_trade_stake);\n      updateLocalStorage(state);\n      $.growl.notice({\n        message: 'Updated successfully',\n      });\n    }\n  },\n  searchToken: {\n    token: '',\n    onTokenChange: (event, scope) => scope.searchToken.token = event.target.value,\n    disable: false,\n    onKeyDown: (event, scope) => {\n      if (event.keyCode === 13) {\n        scope.searchToken.addToken(event, scope);\n      }\n    },\n    addToken: (event, scope) => {\n      //If searchToken.token is empty, do nothing\n      if (!scope.searchToken.token) {\n        $.growl.error({\n          message: 'Enter a valid trader token',\n        });\n        return;\n      }\n\n      scope.searchToken.disable = true;\n\n      validateToken(scope.searchToken.token)\n        .then(tokenUserData => {\n          refreshTraderStats(tokenUserData.loginid, scope.searchToken.token, scope)\n            .then(() => {\n              scope.searchToken.token = '';\n              scope.searchToken.disable = false;\n              updateLocalStorage(scope);\n            })\n            .catch(e => {\n              $.growl.error({ message: e.message });\n              scope.searchToken.disable = false;\n              updateLocalStorage(scope);\n              _.defer(() => $(event.target).focus());\n            });\n        })\n        .catch(error => {\n          $.growl.error({ message: error.message });\n          scope.searchToken.disable = false;\n          updateLocalStorage(scope);\n        });\n    },\n  },\n  /*\n   {\n     //We get this object from server - that's why the variables are named as per what server sends\n     traderStatistics: {\n       active_since:,\n       monthly_profitable_trades:,\n       yearly_profitable_trades:,\n       last_12months_profitable_trades:,\n       total_trades:,\n       trades_profitable:,\n       avg_duration:,\n       avg_profit:,\n       avg_loss:,\n       trades_breakdown:,\n       performance_probability:,\n       copiers:,\n     },\n     yourCopySettings: {\n       copy_start: <trader's API token>,\n       min_trade_stake:,\n       max_trade_stake:,\n       assets: [], // <- This should be list of instrument code(s) e.g, frxEURUSD, R_100, etc\n       trade_types: [],\n     },\n     open: false, // if this section is open\n     started: false, // If this is currently being used for copying\n     disableRefresh: false, // If refresh button clicked\n     loginid: , // login ID of trader\n   }\n   */\n  traderTokens: [],\n};\n\nconst initConfigWindow = () => {\n  const root = $(html).i18n();\n  win_view = rv.bind(root[0], state);\n\n  win = windows.createBlankWindow(root, {\n    title: 'Copy Trade'.i18n(),\n    resizable: true,\n    collapsable: true,\n    minimizable: true,\n    maximizable: true,\n    modal: false,\n    width: 600,\n    open: () => {\n      //Refresh all token details\n      console.log('Called!');\n      const copyTrade = local_storage.get(getStorageName());\n      if (copyTrade) {\n        _.merge(state, copyTrade);\n        state.traderTokens = _.cloneDeep(state.traderTokens); // This is needed to trigger rivetsjs render\n      }\n      //Get the copy settings\n      liveapi.send({ get_settings: 1 }).then(({get_settings = {}}) =>\n        state.allowCopy.allow_copiers = (get_settings.allow_copiers === 1));\n      //Refresh locally stored trader statistics\n      if (copyTrade) {\n        (async function () {\n          for (let traderToken of copyTrade.traderTokens) {\n            try {\n              const loginid = traderToken.loginid;\n              const token = traderToken.yourCopySettings.copy_start;\n              await refreshTraderStats(loginid, token, state);\n            } catch (e) {\n              console.error(e);\n            }\n          }\n        })();\n      }\n    },\n    close: () => {\n      win_view && win_view.unbind();\n      win && win.dialog('destroy').remove();\n      win_view = win = null;\n      // Clear tokens\n      state.traderTokens = [];\n    },\n    'data-authorized' :'true',\n  });\n  win.track({\n    module_id: 'copyTrade',\n    is_unique: true,\n    data: null,\n  });\n\n  win.dialog( 'open' );\n};\n\nexport const init = ($menuLink) => {\n  $menuLink.click(() => {\n    if (!win) initConfigWindow();\n    else win.moveToTop();\n  });\n};\n\nexport default { init }"]}