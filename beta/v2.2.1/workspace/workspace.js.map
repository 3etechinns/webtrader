{"version":3,"sources":["../../../../src/workspace/workspace.es6"],"names":["INITIAL_WORKSPACE_NAME","states","local_storage","get","name","set","clone","JSON","parse","stringify","obj","state","route","workspaces","dialogs","update_route","hide_submenu","tileDialogs","closeAll","dialog","workspace","remove","inx","indexOf","w","splice","show","needsAuthentication","tradeDialog","length","portfolio","statement","profitTable","deposit","withdraw","is_authenticated","growl","notice","message","i18n","_","delay","current_workspace","reopen","name_perv_value","is_saved","findIndex","save","saveas","rename","apply","cancel","find","matches","match","number","parseInt","replace","push","file","hash_code","s","split","reduce","a","b","charCodeAt","open_selector","e","$root","target","closest","click","upload","event","files","value","reader","FileReader","onload","contents","result","data","hash","random","template_type","error","readAsText","download","json","download_file_in_browser","root","init","parent","append","bind","addDialog","clickCb","removeCb","row","cleaner","events","shuffle","array","temp","rand_inx","Math","floor","filter","d","$d","hasClass","window","width","arrange","perform","total_free_space","max_x","y","is","inx_start","row_height","x","h","max","free_space","margin_left","j","animate","left","top","trigger","my","at","best","best_free_space","i","slice","largeDialogs","forEach","setTimeout"],"mappings":"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","file":"workspace.js","sourcesContent":["import html from 'text!./workspace.html';\nimport rv from '../common/rivetsExtra';\nimport $ from 'jquery';\nimport 'jquery-growl';\nimport 'css!./workspace.css';\nimport liveapi from '../websockets/binary_websockets';\nimport tracker from '../windows/tracker';\n\nconst INITIAL_WORKSPACE_NAME = 'my-workspace-1';\n(() => {\n   const states = local_storage.get('states');\n   if(states && !states.name) {\n      states.name = INITIAL_WORKSPACE_NAME;\n      local_storage.set('states', states);\n   }\n})();\n\nconst clone = obj => JSON.parse(JSON.stringify(obj));\n\nconst state = {\n   route: 'all', // one of ['all', 'active', 'saved', 'rename', 'submenu']\n   workspaces: local_storage.get('workspaces') || [],\n   dialogs: [ ],\n   update_route: route => state.route = route,\n   hide_submenu: () => {\n      if(state.route === 'submenu')\n         state.route = 'active';\n   },\n   tileDialogs: () => tileDialogs(),\n   closeAll: () => $('.webtrader-dialog').dialog('close'),\n   workspace: {\n      remove: w => {\n         const inx = state.workspaces.indexOf(w);\n         inx !== -1 && state.workspaces.splice(inx, 1);\n         local_storage.set('workspaces', state.workspaces);\n      },\n      show: w => {\n         let needsAuthentication = w.tradeDialog && w.tradeDialog.length;\n         needsAuthentication = needsAuthentication || w.portfolio || w.statement || w.profitTable \n                              || w.deposit || w.withdraw;\n         if(needsAuthentication && !liveapi.is_authenticated()) {\n            $.growl.notice({ message: 'Please log in to see your saved workspace.'.i18n() });\n            return;\n         }\n         state.closeAll();\n         _.delay(() => {\n            state.current_workspace.name = w.name;\n            local_storage.set('states', w);\n            tracker.reopen(clone(w));\n         }, 500);\n      }\n   },\n   current_workspace: {\n      name: (local_storage.get('states') || {  }).name || 'my-workspace-1',\n      name_perv_value: '',\n      is_saved: () => _.findIndex(state.workspaces, {name: state.current_workspace.name}) !== -1,\n      save: () => {\n         const {name, is_saved} = state.current_workspace;\n         if(!is_saved()) {\n            return state.saveas.show();\n         }\n         const workspace = local_storage.get('states');\n         workspace.name = name;\n         const inx = _.findIndex(state.workspaces, {name: workspace.name});\n         state.workspaces[inx] = workspace;\n         state.workspaces = clone(state.workspaces);\n         local_storage.set('workspaces', state.workspaces);\n         $.growl.notice({ message: 'Workspace changes saved'.i18n() });\n      }\n   },\n   rename: {\n      show: () => {\n         state.current_workspace.name_perv_value = state.current_workspace.name;\n         state.route = 'rename';\n      },\n      apply: () => { \n         let {name, name_perv_value} = state.current_workspace;\n         if(!name || name === name_perv_value) { \n            return state.rename.cancel();\n         }\n         if(_.find(state.workspaces, {name: name})) {\n            const matches = name.match(/\\d+$/);\n            let number = matches ? parseInt(matches[0]) : 0;\n            name = name.replace(/\\d+$/, '');\n            while(_.find(state.workspaces, {name: name + number}))\n               number += 1;\n            name = name + number;\n         }\n         const workspace = _.find(state.workspaces, {name: name_perv_value});\n         if(workspace) {\n            workspace.name = name;\n            local_storage.set('workspaces', state.workspaces);\n         }\n         state.current_workspace.name = name;\n         state.route = 'active';\n      },\n      cancel: () => {\n         state.current_workspace.name = state.current_workspace.name_perv_value;\n         state.route = 'active';\n      }\n   },\n   saveas: {\n      show: () => {\n         state.current_workspace.name_perv_value = state.current_workspace.name;\n         state.route = 'saveas';\n      },\n      apply: () => { \n         let {name, name_perv_value} = state.current_workspace;\n         if(!name) { \n            return state.saveas.cancel();\n         }\n         if(_.find(state.workspaces, {name: name})) {\n            const matches = name.match(/\\d+$/);\n            let number = matches ? parseInt(matches[0]) : 0;\n            name = name.replace(/\\d+$/, '');\n            while(_.find(state.workspaces, {name: name + number}))\n               number += 1;\n            name = name + number;\n         }\n         const workspace = local_storage.get('states');\n         workspace.name = name;\n         state.workspaces.push(workspace);\n         local_storage.set('workspaces', state.workspaces);\n\n         state.current_workspace.name = name;\n         state.route = 'active';\n      },\n      cancel: () => state.rename.cancel()\n   },\n   file: {\n      hash_code: (s) => JSON.stringify(s).split(\"\").reduce((a,b) => {a=((a<<5)-a)+b.charCodeAt(0);return a&a},0),\n      open_selector: (e) => {\n         const $root = $(e.target).closest('.workspace-manager');\n         $root.find(\"input[type=file]\").click();\n      },\n      upload: (event) => {\n         // const _this = this;\n         const file = event.target.files[0];\n         event.target.value = null;\n         if(!file) { return; }\n\n         const reader = new FileReader();\n         reader.onload = (e) => {\n            const contents = e.target.result;\n            // const array = local_storage.get(\"trade-templates\");\n            let data = null;\n            try{\n               data = JSON.parse(contents);\n               const hash = data.random;\n               delete data.random;\n               if(hash !== state.file.hash_code(data)){ throw \"Invalid JSON file\".i18n(); }\n               if(data.template_type !== 'workspace-template') { throw \"Invalid template type.\".i18n(); }\n            } catch(e) {\n               $.growl.error({message:e});\n               return;\n            }\n\n            if(_.find(state.workspaces, {name: data.name})) {\n               const matches = name.match(/\\d+$/);\n               $.growl.error({message: \"Template name already exists\".i18n()});\n               return; // don't apply the same workspace\n            }\n            delete data.template_type;\n            delete data.random;\n            state.workspaces.push(data);\n            local_storage.set('workspaces', state.workspaces);\n\n            $.growl.notice({message: \"Successfully added workspace as \".i18n() + \"<b>\" + data.name + \"</b>\"});\n         }\n\n         reader.readAsText(file);\n      },\n      download: () => {\n         const {name} = state.current_workspace;\n         const inx = _.findIndex(state.workspaces, {name: name});\n         const workspace = inx !== -1 ? state.workspaces[inx] : local_storage.get('states');\n         workspace.name = name;\n         workspace.template_type = 'workspace-template';\n         workspace.random = state.file.hash_code(workspace)\n         var json = JSON.stringify(workspace);\n         download_file_in_browser(workspace.name + '.json', 'text/json;charset=utf-8;', json);\n         $.growl.notice({message: \"Downloading workspace as %1\".i18n().replace(\"%1\", `<b>${workspace.name}.json</b>`)});\n      }\n   }\n};\nstate.current_workspace.root = state;\n\nexport const init = (parent) => {\n   const root = $(html);\n   parent.append(root);\n   rv.bind(root[0], state);\n}\nexport const addDialog = (name, clickCb, removeCb) => {\n   const row = {\n      name: name,\n      click: () => clickCb(),\n      remove: () => { cleaner(); removeCb(); } \n   };\n   const cleaner = () => {\n      const inx = state.dialogs.indexOf(row);\n      inx !== -1 && state.dialogs.splice(inx, 1);\n   }\n   state.dialogs.push(row);\n   return cleaner;\n}\n\nexport const events = $('<div/>');\n\nexport const tileDialogs = () => {\n   /* shuffle the given array */\n   const shuffle = (array) => {\n      let temp, rand_inx;\n\n      for (let inx = array.length; inx > 0;) {\n         rand_inx = Math.floor(Math.random() * inx);\n         --inx;\n         temp = array[inx];\n         array[inx] = array[rand_inx];\n         array[rand_inx] = temp;\n      }\n\n      return array;\n   }\n\n   // get array of dialogs\n   var dialogs = $('.webtrader-dialog').filter((inx, d) => {\n      /* check to see if initialized and is visible */\n      const $d = $(d);\n      return $d.hasClass(\"ui-dialog-content\") && $d.dialog(\"isOpen\") &&\n            !$d.hasClass('ui-dialog-minimized') && ($(window).width() >= $d.dialog('option', 'width'));\n   });\n\n\n   const arrange = (dialogs, perform) => {\n      let total_free_space = 0;\n\n      const max_x = $(window).width();\n      let y = 115; // position of the next window from top\n      if($(\"#msg-notification\").is(\":visible\"))\n            y = 150;\n\n      for (var inx = 0; inx < dialogs.length;) {\n         var inx_start = inx;\n         var row_height = 0; // height of the current row of dialogs\n         var x = 0; // positon of the next window from left\n\n         for (;/* see which which dialogs fit into current row */;) {\n            if (inx == dialogs.length)\n               break;\n            const d = $(dialogs[inx]);\n            const w = d.dialog('option', 'width'),\n               h = d.dialog('option', 'height');\n            row_height = Math.max(row_height, h);\n            if (x + w <= max_x) {\n               x += w;\n               ++inx;\n            }\n            else\n               break;\n         }\n\n         /* divide the vertical space equally between dialogs. */\n         const free_space = x < max_x ? (max_x - x) : 0;\n         let margin_left = x < max_x ? (max_x - x) / (inx - inx_start + 1) : 0; /* the current window might be wider than screen width */\n         if(inx != dialogs.length) { /* we don't care about extra space at last row */\n            total_free_space += free_space;\n         }\n         if (x === 0 && $(dialogs[inx]).dialog('option', 'width') > max_x) {\n            ++inx;\n            margin_left = 0;\n         };\n         x = 0;\n         for (var j = inx_start; j < inx; ++j) {\n            x += margin_left;\n            const d = $(dialogs[j]);\n            const w = d.dialog('option', 'width'),\n               h = d.dialog('option', 'height');\n\n            if(perform) /* are we testing or do we want to arrange elements */\n               d.dialog('widget').animate({\n                  left: x + 'px',\n                  top: y + 'px'\n               }, 1500, d.trigger.bind(d, 'animated'));\n            /* update dialog option.position */\n            d.dialog(\"option\", \"position\", { my: x, at: y });\n            x += w;\n         };\n         y += row_height + 20;\n      }\n      return total_free_space;\n   }\n\n   /* we will try 100 different arrangements and pick the best one */\n   let best = null,\n      best_free_space = 1000*1000;\n   for (var i = 0; i < 100; ++i) {\n      shuffle(dialogs); // shuffle dialogs\n      var total_free_space = arrange(dialogs, false);\n      if (total_free_space < best_free_space) {\n         best = dialogs.slice(); // clone the array\n         best_free_space = total_free_space;\n      }\n   }\n   // get array of large dialogs (larger than window size)\n   const largeDialogs = $('.webtrader-dialog').filter(function (inx, d) {\n      /* check to see if initialized and is visible */\n      const $d = $(d);\n      return $d.hasClass(\"ui-dialog-content\") && $d.dialog(\"isOpen\") && !$d.hasClass('ui-dialog-minimized') && ($(window).width() < $d.dialog('option', 'width'));\n   });\n   _(largeDialogs).forEach(function (d) {\n      best.push(d);\n   });\n   arrange(best, true);\n\n   setTimeout(() => events.trigger('tile'), 1600);\n}\n\nexport default { init, addDialog, events, tileDialogs };\n"]}