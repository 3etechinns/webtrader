{"version":3,"sources":["../../../../src/charts/chartTemplateManager.es6"],"names":[],"mappings":"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","file":"chartTemplateManager.js","sourcesContent":["/**\n * Created by amin on July 31, 2016.\n */\ndefine(['jquery', 'charts/chartWindow', 'common/rivetsExtra'], function($, chartWindow, rv) {\n  require(['text!charts/chartTemplateManager.html']);\n\n  if(!local_storage.get('templates')) {\n    local_storage.set('templates', []);\n  }\n\n  class ChartTemplateManager {\n    constructor(root, dialog_id) {\n      const state = this.init_state(root, dialog_id);\n      require(['text!charts/chartTemplateManager.html'], html => {\n        root.append(html);\n        this.view = rv.bind(root[0], state);\n      });\n    }\n\n    init_state(root, dialog_id) {\n      const chart = $('#' + dialog_id + '_chart').highcharts();\n      const state = {\n        route: { value: 'menu' },\n        menu: {\n          save_changes_disabled: true\n        },\n        templates: {\n          array: local_storage.get('templates'),\n          save_as_value: '',\n          rename_tmpl: null,\n          rename_value: '',\n          current: null,\n        }\n      };\n      const {route, templates, menu} = state;\n\n      /* persist applied templates between page reloads */\n      const current_tmpl = chartWindow.get_chart_options(dialog_id);\n      if(_.findIndex(templates.array, t => t.name === current_tmpl.name) !== -1) {\n        templates.current = current_tmpl;\n      }\n\n      route.update = value => {\n        route.value = value;\n      };\n\n      menu.save_as = () => {\n        const options = chartWindow.get_chart_options(dialog_id) || {};\n        options.name = [`${options.timePeriod} ${options.type}`]\n                      .concat(options.indicators.map(ind => ind.name))\n                      .concat(options.overlays.map(overlay => overlay.displaySymbol))\n                      .join(' + ');\n        templates.save_as_value = options.name;\n        route.update('save-as');\n      }\n\n      menu.templates = () => {\n        templates.array = local_storage.get('templates'); // it can be modified from other dialogs.\n        route.update('templates');\n      }\n\n      menu.save_changes = () => {\n        const current = chartWindow.get_chart_options(dialog_id);\n\n        const name = current.name;\n        const array = local_storage.get('templates');\n        const inx = _.findIndex(array, t => t.name === name);\n        if(inx !== -1) {\n          array[inx] = current;\n        } else {\n          array.push(current);\n        }\n        local_storage.set('templates', array);\n        templates.array = array;\n        templates.current = current;\n        $.growl.notice({message: 'Template changes saved '.i18n() + '(' + current.name + ')'});\n      }\n\n      templates.save_as = () => {\n        const name = templates.save_as_value;\n        const options = chartWindow.get_chart_options(dialog_id);\n        if(options) {\n          options.name = name;\n          const array = local_storage.get('templates');\n          if(array.map(t => t.name).includes(name)) {\n            $.growl.error({message: 'Template name already exists'.i18n() });\n            return;\n          }\n          array.push(options);\n          templates.current = options;\n          local_storage.set('templates', array);\n          templates.array = array;\n          route.update('menu');\n          chartWindow.set_chart_options(dialog_id, options); /* update the name */\n        }\n      }\n\n      templates.remove = (tmpl) => {\n        let array = local_storage.get('templates');\n        templates.array = array.filter(t => t.name !== tmpl.name);\n        local_storage.set('templates', templates.array);\n        if(templates.current && tmpl.name === templates.current.name) {\n          templates.current = null;\n        }\n      }\n\n      templates.rename = tmpl => {\n        templates.rename_value = tmpl.name;\n        templates.rename_tmpl = tmpl;\n        route.update('rename');\n      }\n\n      templates.do_rename = () => {\n        const name = templates.rename_tmpl.name;\n        const new_name = templates.rename_value;\n        const array = local_storage.get('templates');\n        if(array.map(t => t.name).includes(new_name)) {\n            $.growl.error({message: 'Template name already exists'.i18n() });\n            return;\n        };\n        const tmpl = array.find(t => t.name === name);\n        if(tmpl) {\n          tmpl.name = new_name;\n          local_storage.set('templates', array);\n          templates.array = array;\n          route.update('templates');\n\n          /* update template name in chartWindow options */\n          const current = chartWindow.get_chart_options(dialog_id);\n          if(current.name == name) {\n            templates.current = current;\n            current.name = new_name;\n            chartWindow.set_chart_options(dialog_id, current);\n          }\n        }\n      }\n\n      templates.apply = tmpl => {\n        chartWindow.apply_chart_options(dialog_id, tmpl);\n        templates.current = tmpl;\n      }\n\n      return state;\n    }\n\n    unbind() {\n      this.view && this.view.unbind();\n      this.view = null;\n    }\n  }\n\n  return {\n    init: (root, dialog_id) => new ChartTemplateManager(root, dialog_id)\n  }\n});\n"]}