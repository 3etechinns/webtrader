{"version":3,"sources":["../../../../src/trade/tradeTemplateManager.es6"],"names":["define","$","chartWindow","rv","require","local_storage","get","set","TradeTemplateManager","root","dialog","_this","templates","forEach","tmpl","random","template_type","hashCode","JSON","stringify","state","init_state","append","html","i18n","view","bind","route","value","menu","array","save_as_value","rename_tmpl","rename_value","current","current_tmpl","get_template","_","findIndex","t","update","save_as","name","categories_value","capitalize","categoriy_displays_selected","save_changes","inx","push","growl","notice","message","text","open_file_selector","event","find","click","upload","file","target","files","reader","FileReader","onload","e","contents","result","data","parse","hash","error","apply","readAsText","preventDefault","substring","map","includes","set_template","download","json","download_file_in_browser","remove","filter","rename","do_rename","new_name","hide_template_menu","confirm","action","currentTarget","confirm_prevMenu","confirm_text","confirm_yes","confirm_no","s","split","reduce","a","b","charCodeAt","unbind","init"],"mappings":"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","file":"tradeTemplateManager.js","sourcesContent":["/**\n * Created by amin on July 31, 2016.\n */\ndefine(['jquery', 'charts/chartWindow', 'common/rivetsExtra'], function($, chartWindow, rv) {\n  require(['text!trade/tradeTemplateManager.html']);\n\n  if(!local_storage.get('trade-templates')) {\n    local_storage.set('trade-templates', []);\n  }\n\n  class TradeTemplateManager {\n    constructor(root, dialog) {\n      const _this = this;\n      const templates = local_storage.get(\"trade-templates\");\n      templates.forEach(function(tmpl){\n        if(!tmpl.random){\n          tmpl.template_type = 'trade-template';\n          const random = _this.hashCode(JSON.stringify(tmpl));\n          tmpl.random = random;\n        }\n      });\n      local_storage.set(\"trade-templates\", templates);\n      const state = this.init_state(root, dialog);\n      require(['text!trade/tradeTemplateManager.html'], html => {\n        root.append(html.i18n());\n        this.view = rv.bind(root[0], state);\n      });\n    }\n\n    init_state(root, dialog) {\n      const state = {\n        route: { value: 'menu' },\n        menu: {\n        },\n        templates: {\n          array: local_storage.get('trade-templates'),\n          save_as_value: '',\n          rename_tmpl: null,\n          rename_value: '',\n          current: null,\n        }\n      };\n      const {route, templates, menu} = state;\n\n      /* persist applied templates between page reloads */\n      const current_tmpl = dialog.get_template();\n      delete current_tmpl.random;\n      current_tmpl.random = this.hashCode(JSON.stringify(current_tmpl));\n      templates.array = local_storage.get(\"templates\");\n      if(_.findIndex(templates.array, t => t.random === current_tmpl.random) !== -1) {\n        templates.current = current_tmpl;\n      }\n\n      route.update = value => {\n        route.value = value;\n      };\n\n      menu.save_as = () => {\n        const tmpl = dialog.get_template();\n        tmpl.name = `${tmpl.categories_value} ${_.capitalize(tmpl.categoriy_displays_selected)}`;\n        templates.save_as_value = tmpl.name;\n        route.update('save-as');\n      }\n\n      menu.templates = () => {\n        templates.array = local_storage.get('trade-templates'); // it can be modified from other dialogs.\n        route.update('templates');\n      }\n\n      menu.save_changes = () => {\n        const current = dialog.get_template();\n        delete current.random;\n        current.random = this.hashCode(JSON.stringify(current));\n        const name = current.name;\n        const array = local_storage.get('trade-templates');\n        const inx = _.findIndex(array, t => t.name === name);\n        if(inx !== -1) {\n          array[inx] = current;\n        } else {\n          array.push(current);\n        }\n        local_storage.set('trade-templates', array);\n        templates.array = array;\n        templates.current = current;\n        $.growl.notice({message: $(\"<div/>\").text('Template changes saved '.i18n() + '(' + current.name + ')').html()});\n      }\n\n      menu.open_file_selector = (event) => {\n        $(root).find(\"input[type=file]\").click();\n      }\n\n      menu.upload = (event) => {\n        const file = event.target.files[0];\n        event.target.files = null;\n        event.target.value = null;\n        if(!file)\n          return;\n\n        const reader = new FileReader();\n        reader.onload = (e) => {\n          const contents = e.target.result;\n          const array = local_storage.get(\"trade-templates\");\n          let data = null;\n          try{\n            data = JSON.parse(contents);\n            const hash = data.random;\n            const template_type = data.template_type;\n            delete data.random;\n            if(hash !== this.hashCode(JSON.stringify(data))){\n              throw \"Invalid JSON file\".i18n();\n            }\n            data.random = hash;\n            // Check if template was already uploaded\n            array.forEach(function(tmpl){\n              if(tmpl.random == data.random){\n                throw \"Template already exists\".i18n();\n              }\n            });\n            if(template_type !== 'trade-template') {\n              throw \"Invalid template type.\".i18n();\n            }\n          } catch(e){\n            $.growl.error({message:e});\n            return;\n          }\n          templates.apply(data);\n          array.push(data);\n          local_storage.set('trade-templates', array);\n          templates.array = array;\n          $.growl.notice({message: \"Successfully applied the template and saved it as \".i18n() + \"<b>\" + data.name + \"</b>\"});\n        }\n\n        reader.readAsText(file);\n      }\n\n      templates.save_as = (event) => {\n        event.preventDefault();\n        const name = templates.save_as_value.substring(0,20);\n        const tmpl = dialog.get_template();\n        if(tmpl) {\n          tmpl.name = name;\n          const array = local_storage.get('trade-templates');\n          if(array.map(t => t.name).includes(name)) {\n            $.growl.error({message: 'Template name already exists'.i18n() });\n            return;\n          }\n          delete tmpl.random;\n          tmpl.random = this.hashCode(JSON.stringify(tmpl));\n          array.push(tmpl);\n          templates.current = tmpl;\n          local_storage.set('trade-templates', array);\n          templates.array = array;\n          route.update('menu');\n          dialog.set_template(tmpl);\n        }\n      }\n\n      templates.download = (tmpl) => {\n        var json = JSON.stringify(tmpl);\n        download_file_in_browser(tmpl.name + '.json', 'text/json;charset=utf-8;', json);\n        $.growl.notice({message: \"Downloading template as <b>\".i18n() + tmpl.name + \".json</b>\"});\n      }\n\n      templates.remove = (tmpl) => {\n        let array = local_storage.get('trade-templates');\n        templates.array = array.filter(t => t.name !== tmpl.name);\n        local_storage.set('trade-templates', templates.array);\n        if(templates.current && tmpl.name === templates.current.name) {\n          templates.current = null;\n        }\n      }\n\n      templates.rename = tmpl => {\n        templates.rename_value = tmpl.name;\n        templates.rename_tmpl = tmpl;\n        route.update('rename');\n      }\n\n      templates.do_rename = (event) => {\n        event.preventDefault();\n        const name = templates.rename_tmpl.name;\n        const new_name = templates.rename_value.substring(0,20);\n        const array = local_storage.get('trade-templates');\n        if(array.map(t => t.name).includes(new_name)) {\n            $.growl.error({message: 'Template name already exists'.i18n() });\n            return;\n        };\n        const tmpl = array.find(t => t.name === name);\n        if(tmpl) {\n          delete tmpl.random;\n          tmpl.name = new_name;\n          tmpl.random = this.hashCode(JSON.stringify(tmpl));\n          local_storage.set('trade-templates', array);\n          templates.array = array;\n          route.update('templates');\n\n          /* update template name in current dialog */\n          const current = dialog.get_template();\n          if(current.name == name) {\n            current.name = new_name;\n            delete current.random;\n            current.random = this.hashCode(JSON.stringify(current));\n            dialog.set_template(current);\n            templates.current = current;\n          }\n        }\n      }\n\n      templates.apply = tmpl => {\n        dialog.set_template(tmpl);\n        templates.current = tmpl;\n        route.update('menu');\n        dialog.hide_template_menu();\n      }\n\n      templates.confirm = (tmpl, event) => {\n        route.update(\"confirm\");\n        const action = event.currentTarget.text;\n        templates.confirm_prevMenu = action === \"Delete\".i18n() ? \"templates\" : \"menu\";\n        templates.confirm_text = action === \"Delete\".i18n() ? \"Are you sure you want to delete template?\".i18n() : \"Are you sure you want to overwrite current template?\".i18n();\n\n        templates.confirm_yes = () => {\n          if(action === \"Delete\".i18n()) {\n            templates.remove(tmpl)\n            if(templates.current === tmpl)\n              templates.current = null;\n          }\n          else {\n            menu.save_changes();\n          }\n          templates.confirm_no();\n        }\n\n        templates.confirm_no = () => {\n          route.update(templates.confirm_prevMenu);\n        }\n      }\n\n      return state;\n    }\n\n    hashCode(s) {\n      return s.split(\"\").reduce(function(a,b){a=((a<<5)-a)+b.charCodeAt(0);return a&a},0);\n    }\n\n    unbind() {\n      this.view && this.view.unbind();\n      this.view = null;\n    }\n  }\n\n  return {\n    init: (root, dialog) => new TradeTemplateManager(root, dialog)\n  }\n});\n"]}